<launch>
    <!-- where the scene information are saved -->
    <arg name="DATA_PATH" value="$(find grasp_srv)/kinect_data/output/" />
    <!-- where the pcd model are saved -->
    <arg name="MODEL_PATH" value="$(find grasp_srv)/data/" />
    <!-- where the grasp pose should be saved -->
    <arg name="GRASP_PATH" value="$(find grasp_srv)/grasp_data/" />
    
    <!-- run service node -->
    <node name="grasp_gen" pkg="grasp_srv" type="grasp_gen_server"
        args="$(find grasp_srv) $(arg MODEL_PATH) $(arg GRASP_PATH)" output="screen"/>   
    
    <node name="grasp_visualizer" pkg="grasp_visualizer" type="grasp_visualizer"
        output="screen"/>

    <node name="render_object" pkg="grasp_srv" type="render_object" 
        args="$(arg MODEL_PATH)" output="screen"/> 
    
    <node name="grasp_connector" pkg="grasp_srv" type="gripper_transfer.py" 
        output="screen"/>

    <!-- robot visualization -->
    <arg  name="model" default="$(find ur_e_description)/urdf/gripper_only.urdf"/>
    <param name="robot_description" command="cat $(arg model)"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- camera 1 -->
    <group ns="camera1">
    <node pkg="tf" type="static_transform_publisher" name="camera_broadcaster"
        args="0 0 0.5 0 3.1415926 0 world camera1 10" />
    <node name="camera_info" pkg="rostopic" type="rostopic"
        args="pub camera_info sensor_msgs/CameraInfo
        '{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: 'camera1'},
        height: 480, width: 640, distortion_model: 'plumb_bob',
        D: [0],
        K: [500.0, 0.0, 320, 0.0, 500.0, 240.0, 0.0, 0.0, 1.0],
        R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0],
        P: [500.0, 0.0, 320, 0.0, 0.0, 500, 240, 0.0, 0.0, 0.0, 1.0, 0.0],
        binning_x: 0, binning_y: 0,
        roi: {x_offset: 0, y_offset: 0, height: 480, width: 640, do_rectify: false}}' -r 2"
        output="screen"/>
    </group>

    <!-- image 1 -->
    <group ns="rviz1/camera1/image">
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressed'
        - 'image_transport/compressedDepth'
        - 'image_transport/theora'
    </rosparam>
    </group>

    <!-- camera 2 -->
    <group ns="camera2">
    <node pkg="tf" type="static_transform_publisher" name="camera_broadcaster"
        args="0.5 0 0.2 0 -1.578 0 world camera2 10" />
    <node name="camera_info" pkg="rostopic" type="rostopic"
        args="pub camera_info sensor_msgs/CameraInfo
        '{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: 'camera2'},
        height: 480, width: 640, distortion_model: 'plumb_bob',
        D: [0],
        K: [500.0, 0.0, 320, 0.0, 500.0, 240.0, 0.0, 0.0, 1.0],
        R: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0],
        P: [500.0, 0.0, 320, 0.0, 0.0, 500, 240, 0.0, 0.0, 0.0, 1.0, 0.0],
        binning_x: 0, binning_y: 0,
        roi: {x_offset: 0, y_offset: 0, height: 480, width: 640, do_rectify: false}}' -r 2"
        output="screen"/>
    </group>

    <!-- image 2 -->
    <group ns="rviz1/camera2/image">
    <rosparam param="disable_pub_plugins">
        - 'image_transport/compressed'
        - 'image_transport/compressedDepth'
        - 'image_transport/theora'
    </rosparam>

    <!-- run rviz -->
    <node name="rviz" pkg="rviz" type="rviz"/>
</launch>
